// script.js ‚Äî –ª–æ–≥–∏–∫–∞ Mini‚ÄëApp HonestRE, –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø–æ–¥ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—É—é –∫–∞—Ä—Ç–æ—á–∫—É
// Prod‚ÄëAPI: https://api.easychina.kz

const API_BASE = "https://api.easychina.kz";

/* ---------------- –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò ---------------- */
async function apiGet(path) {
  const resp = await fetch(`${API_BASE}${path}`);
  if (!resp.ok) throw new Error(await resp.text());
  return resp.json();
}

function renderReviewCard(r) {
  const gasDisplay = r.gas === 0 || r.gas === null ? "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç" : `${r.gas}/5`;
  const dateStr = new Date(r.date || r.created_at).toLocaleString("ru-RU");

  return `
<b>üìÑ ID ${r.id}</b><br>
üèôÔ∏è <b>${r.city}</b> <i>${r.complex_name}</i><br>
${r.status}<br>
üî• –û—Ç–æ–ø–ª–µ–Ω–∏–µ: ${r.heating}/5 | ‚ö° –≠–ª–µ–∫—Ç—Ä: ${r.electricity}/5 | üè≠ –ì–∞–∑: ${gasDisplay}<br>
üíß –í–æ–¥–∞: ${r.water}/5 | üîä –®—É–º: ${r.noise}/5 | üè¢ –£–ö: ${r.mgmt}/5<br>
üí∞ –ê—Ä–µ–Ω–¥–∞: ${r.rent_price ?? "‚Äî"}<br>
üëç ${r.likes ?? ""}<br>
üëé ${r.annoy ?? ""}<br>
‚úÖ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: ${r.recommend ? "–î–∞" : "–ù–µ—Ç"}<br>
‚è∞ ${dateStr}
  `;
}

/* ---------------- –°–¢–†–ê–ù–ò–¶–ê –ü–û–ò–°–ö–ê (search.html) ---------------- */
const searchForm = document.getElementById("searchForm");
if (searchForm) {
  const resultBlock = document.getElementById("resultBlock");

  searchForm.addEventListener("submit", async (e) => {
    e.preventDefault();
    resultBlock.innerHTML = "‚è≥ –ü–æ–∏—Å–∫‚Ä¶";

    const queryInput = document.getElementById("query");
    const query = queryInput.value.trim();
    if (!query) {
      resultBlock.innerHTML = "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ñ–ö";
      return;
    }

    try {
      const complexes = await apiGet(`/complexes?query=${encodeURIComponent(query)}`);
      if (complexes.length === 0) {
        resultBlock.innerHTML = "–ñ–ö –Ω–µ –Ω–∞–π–¥–µ–Ω, —É—Ç–æ—á–Ω–∏—Ç–µ –∑–∞–ø—Ä–æ—Å.";
        return;
      }

      const complex = complexes[0];
      const reviews = await apiGet(`/reviews?complex_id=${complex.id}&limit=3`);

      if (reviews.length === 0) {
        resultBlock.innerHTML = `–î–ª—è <b>${complex.name}</b> –ø–æ–∫–∞ –Ω–µ—Ç –æ—Ç–∑—ã–≤–æ–≤.`;
        return;
      }

      resultBlock.innerHTML = reviews.map(renderReviewCard).join("<br><hr><br>");
    } catch (err) {
      resultBlock.innerHTML = `–û—à–∏–±–∫–∞: ${err.message}`;
    }
  });
}
