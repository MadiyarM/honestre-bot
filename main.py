import asyncio
import logging
from telegram.ext import (
    Application, CommandHandler, MessageHandler, filters
)

import config
from handlers.start   import start, menu_handler, MAIN_MENU
from handlers.review  import review_conv_handler
from handlers.search  import search_conv_handler
from db import init_db

logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s %(levelname)s: %(message)s"
)


async def _unknown(update, context):
    await update.message.reply_text(
        "–Ø –Ω–µ –ø–æ–Ω—è–ª –∑–∞–ø—Ä–æ—Å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é.",
        reply_markup=MAIN_MENU
    )


def build_application() -> Application:
    """–°–æ–∑–¥–∞—ë–º –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—ä–µ–∫—Ç Application –±–µ–∑ –∑–∞–ø—É—Å–∫–∞ polling."""
    app = (
        Application.builder()
        .token(config.API_TOKEN)
        .build()
    )

    # ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –†–æ—É—Ç–∏–Ω–≥ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
    app.add_handler(CommandHandler("start", start))
    app.add_handler(menu_handler())          # –ª–æ–≤–∏–º –∫–Ω–æ–ø–∫–∏ ¬´üìù‚Ä¶¬ª / ¬´üîç‚Ä¶¬ª
    app.add_handler(review_conv_handler)    # –¥–∏–∞–ª–æ–≥ ¬´–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤¬ª
    app.add_handler(search_conv_handler)    # –¥–∏–∞–ª–æ–≥ ¬´–ù–∞–π—Ç–∏ –ñ–ö¬ª

    # –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ / –∫–æ–º–∞–Ω–¥—ã
    app.add_handler(MessageHandler(filters.COMMAND, _unknown))
    return app


def main() -> None:
    """–¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –¥–ª—è systemd: —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –±–µ–∑ –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö event-loop'–æ–≤."""
    # 1) –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î (–∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è) ‚Äì –≤—ã–ø–æ–ª–Ω–∏–º –∏ –∑–∞–∫—Ä–æ–µ–º —Ü–∏–∫–ª
    asyncio.run(init_db())

    # 2) –ó–∞–ø—É—Å–∫–∞–µ–º Telegram‚Äë–±–æ—Ç
    app = build_application()
    logging.info("Bot started")
    app.run_polling(allowed_updates=["message"])


if __name__ == "__main__":
    main()
